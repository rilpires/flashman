name: Master pull request check

on:
  pull_request:
    branches: [ master ]

jobs:
  On-pull-to-master:
    runs-on: [ubuntu-latest]

    strategy:
      matrix:
        node-version: [12.x]
        mongodb-version: ['4.4']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get tags
        run: git fetch --tags origin

      - name: Getting latest version & check if version is available
        run: |
          VERSION=$(cat ./RELEASE_NOTES.json | jq -r .latest_version)
          echo "$VERSION" | grep -G -q "^[0-9]*\.[0-9]*\.[0-9]*$"
          if [ $? -ne 0 ]; then
            echo "Versão fora do formato ou não encontrada"
            exit 1
          fi
          GIT_TAG=$(git tag -l "$VERSION")
          if [ "$GIT_TAG" != "" ]; then
            echo "Versão já existe. Bump de versão necessário"
            exit 1
          fi
          # Check if all keys exists
          cat ./RELEASE_NOTES.json | jq -r '."'$VERSION'".custom_firmware_compatibilities | any'
          cat ./RELEASE_NOTES.json | jq -r '."'$VERSION'".tr069_compatibilities | any'
          cat ./RELEASE_NOTES.json | jq -r '."'$VERSION'".fixes | any'
          cat ./RELEASE_NOTES.json | jq -r '."'$VERSION'".improvements | any'
          cat ./RELEASE_NOTES.json | jq -r '."'$VERSION'".features | any'

          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-replica-set: rs0
          mongodb-db: flashman
      
      - name: Setting up genieacs
        run: |
          set -a ; . ./test.env ; set +a
          cd ..
          git clone https://github.com/anlix-io/genieacs.git
          cd genieacs
          npm install
          npm run build
          node ./dist/bin/genieacs-nbi &
          sleep 3
          node ./dist/bin/genieacs-cwmp &

      - name: Initializing flashman
        run: |
          set -a
          . ./test.env
          set +a
          echo Running node version: "$(node --version)"
          node ./bin/www &
          sleep 5

      - name: Run Blackbox tests
        run: npm run bb-test

      - name: Destroying mongodb container
        if: ${{ always() }}
        run: docker container kill mongodb ; docker container prune -f
      
      - name: Removing current genieacs folder
        if: ${{ always() }}
        run: |
          rm -r ../genieacs/ ;
