
#special-search-terms.modal.fade(tabindex="-1", role="dialog")
  .modal-dialog.modal-notify.modal-teal.modal-lg(role="document")
    .modal-content
      .modal-header
        p.heading.lead
          span.fas.fa-search.fa-lg
          strong &nbsp; #{t('specialSearchFilters')}

        button.close(type="button", data-dismiss="modal")
          span.white-text &times;
      .modal-body
          .row
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2.mb-2
                  .black-text= t('online')
                span.badge.grey.lighten-2.bounceIn.mr-2.mb-2
                  .black-text= t('unstable')
                span.badge.grey.lighten-2.bounceIn
                  .black-text= t('offline')
            .col
              p
                strong= t('colorFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2.mb-2
                  .black-text= t('offline>H')
                span.badge.grey.lighten-2.bounceIn.mr-2.mb-2
                  .black-text= t('online>H')
            .col
              p
                strong= t('biggerThanFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2.mb-2
                  .black-text= t('upgradeState', {state: 'on'})
                span.badge.grey.lighten-2.bounceIn
                  .black-text= t('updateState', {state: 'on'})
            .col
              p
                strong= t('updateOnFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2.mb-2
                  .black-text= t('alert')
            .col
              p
                strong= t('alertFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2.mb-2
                  .black-text= t('upgradeState', {state: 'off'})
                span.badge.grey.lighten-2.bounceIn
                  .black-text= t('updateState', {state: 'off'})
            .col
              p
                strong= t('updateOffFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2.mb-2
                  .black-text tr069
                span.badge.grey.lighten-2.bounceIn
                  .black-text flashbox
            .col
              p
                strong= t('cpeTypeFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('signalState', {state: 'good'})
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('signalState', {state: 'weak'})
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('signalState', {state: 'bad'})
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('noSignal')
            .col
              p
                strong= t('opticalSignalQualityFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('ipv6State', {state: 'on'})
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('ipv6State', {state: 'off'})
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('ipv6State', {state: 'unknown'})
            .col
              p
                strong= t('ipv6EnabledFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('meshState', {state: 'on'})
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('meshState', {state: 'off'})
            .col
              p
                strong= t('meshEnabledFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('modeType', {type: t('router')})
                span.badge.grey.lighten-2.bounceIn.mr-2
                  //- 'bridge' is not translatable
                  .black-text= t('modeType', {type: 'bridge'})
            .col
              p
                strong= t('cpeModeFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('/or')
            .col
              p
                strong= t('orFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('/and')
            .col
              p
                strong= t('andFilterDescription')
          .row.mt-2
            .col
              h4
                span.badge.grey.lighten-2.bounceIn.mr-2
                  .black-text= t('/exclude')
            .col
              p
                strong= t('excludeFilterDescription')
